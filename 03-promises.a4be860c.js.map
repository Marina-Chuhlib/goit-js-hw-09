{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAqCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUC,UAEtBG,EAAO,CAAEJ,WAAUC,S,GAClBA,E,IA5CSQ,SAASC,cAAc,SAiC/BC,iBAAiB,UA/BL,SAAAC,GAClBA,EAAEC,iBAEF,IAIIC,EAAAF,EAAEG,cAAcC,SAHlBC,EAGEH,EAHFb,MACAiB,EAEEJ,EAFFK,KACAC,EACEN,EADFO,OAGEC,EAAQC,OAAON,EAAWO,OACxBL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,QAE7BF,GAASH,GAAQE,GAAU,IAC9BxB,EAAA4B,OAAOC,QAAQ,+BACfd,EAAEG,cAAcY,SAGlB,IAAK,IAAIC,EAAW,EAAGA,GAAYP,EAAQO,GAAY,EACrD7B,EAAc6B,EAAUN,GACrBO,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBJ,EAAA4B,OAAOM,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE9DgC,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBJ,EAAA4B,OAAOC,QAAQ,sBAAuCM,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAGhEqB,GAASH,C,IAmBbpB,EAAc,EAAG,MACd8B,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MACjBiC,QAAQC,IAAI,uBAAwCH,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAE3DgC,OAAM,SAAAH,G,IAAG9B,EAAQ8B,EAAR9B,SAAUC,EAAK6B,EAAL7B,MAClBiC,QAAQC,IAAI,sBAAqCH,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nconst onCreateBtn = e => {\n  e.preventDefault();\n\n  const {\n    delay: delayValue,\n    step: stepValue,\n    amount: amountValue,\n  } = e.currentTarget.elements;\n\n  let delay = Number(delayValue.value);\n  const step = Number(stepValue.value);\n  const amount = Number(amountValue.value);\n\n  if ((delay || step || amount) < 0) {\n    Notify.failure('Please write positive value');\n    e.currentTarget.reset();\n  }\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    delay += step;\n  }\n};\n\nformRef.addEventListener('submit', onCreateBtn);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      }\n      reject({ position, delay });\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delayValue","stepValue","step","amountValue","amount","delay1","Number","value","Notify","failure","reset","position1","then","param","success","concat","catch","console","log"],"version":3,"file":"03-promises.a4be860c.js.map"}